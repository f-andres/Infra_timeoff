version: 2

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan for IAM and basic resources
          command: |
            cd 01_iam
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
            
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd 01_iam
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd 01_iam
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd 01_iam
            terraform apply -auto-approve tfdestroy

#  Network

  plan-apply-net:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan for IAM and basic resources
          command: |
            cd 02_network
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
            
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply-net:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd 02_network
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy-net:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd 02_network
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy-net:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd 01_iam
            terraform apply -auto-approve tfdestroy
## Cluster

#  Network

  plan-apply-cluster:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan for IAM and basic resources
          command: |
            cd 03_cluster
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
            
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply-cluster:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd 03_cluster
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy-cluster:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd 03_cluster
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy-cluster:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd 03_cluster
            terraform apply -auto-approve tfdestroy
##


# Workflow 
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy
      - plan-apply-net:
          requires:
            - apply      
      - hold-apply-net:
          type: approval
          requires:
            - plan-apply-net
      - apply-net:
          requires:
            - hold-apply-net
      - plan-destroy-net:
          requires:
            - apply-net
      - hold-destroy-net:
          type: approval
          requires:
            - plan-destroy-net
      - destroy-net:
          requires:
            - hold-destroy-net
      - plan-apply-cluster:
          requires:
            - apply-net      
      - hold-apply-cluster:
          type: approval
          requires:
            - plan-apply-cluster
      - apply-cluster:
          requires:
            - hold-apply-cluster
      - plan-destroy-cluster:
          requires:
            - apply-cluster
      - hold-destroy-cluster:
          type: approval
          requires:
            - plan-destroy-cluster
      - destroy-cluster:
          requires:
            - hold-destroy-cluster